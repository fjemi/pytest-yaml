# /examples/casts_example/app_test.yml

globals:
  resources:
  - /examples/casts_example/assertions.py


tests:
- function: add
  description: Returns the result of adding two numbers
  tests:
  - description: Cast argument as a dataclass defined in module
    cast_arguments:
    - caster: Data
      field: data
    arguments:
      data:
        a: 1
        b: 1
    assertions:
    - method: assertions.assert_type
      expected: Data
    - method: assertions.assert_equals
      # Get the value of a field within the output
      field: result
      expected: 2
  - description: Cast argument as a dataclass defined in resource module
    cast_arguments:
    - caster: test_resources.app.Test_Data
      field: data
    arguments:
      data:
        a: 2
        b: 2
    assertions:
    - method: assertions.assert_type
      expected: Test_Data
    - method: assertions.assert_equals
      field: result
      expected: 4
    - method: assertions.assert_equals
      # Cast preformed at the assertion level
      cast_output:
      - caster: __builtins__.str
      expected: Test_Data(a=2, b=2, result=4)
  - description: Cast arguments as a dataclass and cast output to a dictionary
    cast_arguments:
    - caster: Data
      field: data
      unpack: true
    arguments:
      data:
        a: 3
        b: 3
    # Cast output at the test level
    cast_output:
    - caster: dc.asdict
    assertions:
    - method: assertions.assert_type
      expected: dict
    - method: assertions.assert_equals
      expected:
        a: 3
        b: 3
        result: 6
