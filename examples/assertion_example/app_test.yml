# ${ROOT_DIR}/examples/assertion_example/app_test.yml


globals:
  resources:
  # Use absolute path for resources
  - ${ROOT_DIR}/examples/assertion_example/assertions.py


tests:
- function: subtract
  description: Returns the result from subtracting two numbers
  tests:
  - description: Subtract two numbers
    arguments:
      a: 0
      b: 0
    assertions:
    # Method accessible in relation to absolute
    # path of the module to test
    - method: assertions.assert_equals
      expected: 0
  - description: Subtract a number and a string
    arguments:
      a: '0'
      b: 0
    assertions:
    - method: assertions.assert_exception
      expected: TypeError
    # Output is always null if an error occurs
    - method: assertions.assert_equals
      expected: null
  - description: Assertion method doesn't exist
    arguments:
      a: 1
      b: 1
    assertions:
    # Fails since method does not exist
    - method: assertions.method_does_no_exist
      expected: null
- function: add
  description: Returns a dictionary containing the result of adding two numbers
  tests:
  - arguments:
      a: 0
      b: 0
    assertions:
    - method: assertions.assert_equals
      expected:
        result: 0
    - method: assertions.assert_equals
      # Setting the `field` key allows us verify specific
      # attributes/keys of the output
      field: result
      # Casting the output to a string
      cast_output:
      - caster: __builtins__.str
      expected: '0'
