# /examples/patch_example/app_test.yml

globals:
  resources:
  - /examples/patch_example/assertions.py


tests:
- function: get_object
  description: Returns an object within the function's parent module
  tests:
  - description: Return original objects
    tests:
    - arguments:
        name: STRING
      assertions:
      - method: assertions.equals
        expected: string
    - arguments:
        name: NUMBER
      assertions:
      - method: assertions.equals
        expected: 1
    - arguments:
        name: DICTIONARY
      assertions:
      - method: assertions.equals
        expected:
          key: value
    - arguments:
        name: function_
      assertions:
      - method: assertions.equals
        field: __name__
        expected: function_
      - method: assertions.function_calls
        expected:
          n: 1
          results:
          - FUNCTION
  - description: Return patched objects
    tests:
    - description: Patch string with another string
      patches:
      - method: value
        value: patched_string
        name: STRING
      arguments:
        name: STRING
      assertions:
      - method: assertions.equals
        expected: patched_string
    - description: Patch number with another number
      patches:
      - method: value
        value: 2
        name: NUMBER
      arguments:
        name: NUMBER
      assertions:
      - method: assertions.equals
        expected: 2
    - description: Patch an existing dictionary key
      patches:
      - method: value
        value: patched_value
        name: DICTIONARY.key
      arguments:
        name: DICTIONARY
      assertions:
      - method: assertions.equals
        expected:
          key: patched_value
    - description: Patch a non-existing dictionary key
      patches:
      - method: value
        value: patched_value
        name: DICTIONARY.patched_key
      arguments:
        name: DICTIONARY
      assertions:
      - method: assertions.equals
        expected:
          key: value
          patched_key: patched_value
    - description: Patch a field in a dataclass as a callable
      patches:
      - method: callable
        value: patched_value
        name: DATA.field
      arguments:
        name: DATA
      assertions:
      - method: assertions.equals
        field: field.__name__
        expected: callable_patch
      - method: assertions.equals
        field: field.__class__.__name__
        expected: function
    - description: Patch a function as a side effect list
      patches:
      - method: side_effect_list
        value:
        - uno
        - dos
        - tres
        name: function_
      arguments:
        name: function_
      assertions:
      - method: assertions.function_calls
        expected:
          n: 4
          results:
          - uno
          - dos
          - tres
          - uno
    - description: Patch a function as a side effect dict
      patches:
      - value:
          a: A
          b: B
        method: side_effect_dict
        # name: function_
        name: TEMP
      arguments:
        # name: function_
        name: TEMP
      assertions:
      - method: assertions.function_calls
        expected:
          keys:
          - a
          - b
          results:
          - A
          - B
