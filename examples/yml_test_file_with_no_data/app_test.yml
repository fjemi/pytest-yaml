# functions:
# - name: main
#   description: Orchestration function that calls the function to use for 
#     subtracting two numbers based on the main argument types
#   tests:
#   - description: Main argument is a dataclass
#     patch:
#     - object: patch_os
#       value: patch_os_patched
#     arguments:
#       data: 
#         a: 0
#         b: 0
#     cast_arguments:
#       data: Data
#     assertions:
#     - has_attributes:
#         result: 0
#     - type: Data
#   - description: Main argument is a dataclass and result it cast as a string
#     arguments:
#       data: 
#         a: 1
#         b: 2
#     cast_arguments:
#       data: Data
#     cast_result: str
#     assertions:
#     - equals: Data(a=1, b=2, result=-1)
#     - type: str
#   - description: Main argument is a dataclass and result it cast as a string
#     arguments:
#       data: 
#         a: 1
#         b: TypeError
#     cast_arguments:
#       data: Data
#     cast_result: str
#     assertions:
#     - equals: TypeError
# - name: subtract_numbers
#   description: Returns the result of subtracting two numbers
#   tests:
#   - arguments:
#       a: 1
#       b: 2
#     assertions:
#     - equals: -1
#     - type: [int, float]
# - name: subtract_dataclass
#   description: Returns a dataclass containing two numbers and the result
#     of subtracting the numbers
#   tests:
#   - arguments:
#       data:
#         a: 1
#         b: 2
#     cast_arguments:
#       data: Data
#     cast_result: dict
#     assertions:
#     - has_keys:
#         result: -1
#     - type: [dict]
#     # - type: Data
# - name: raise_runtime_error
#   description: Raises a run time error
#   tests:
#   - arguments: 
#       data: null
#     assertions:
#     - equals: RuntimeError