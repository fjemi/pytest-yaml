globals:
  resources:
  - ${ROOT_DIR}/assertions/app.py


tests:
- function: process_arguments
  description: >
    Process the main function's arguments as a dataclass
  tests:
  - description: Undefined arguments
    arguments:
      locals_: {}
    cast_output:
    - caster: __builtins__.str
    assertions:
    - method: equals
      expected: Data(module=None, yaml=None, contents=None, config=None, environment=None, schema=None)
  - description: Defined arguments
    arguments:
      locals_:
        config: config
        contents: contents
        environment: environment
        module: module
        schema: schema
        yaml: yaml
    cast_output:
    - caster: dc.asdict
    assertions:
    - method: equals
      expected:
        config: config
        contents: contents
        environment: environment
        module: module
        schema: schema
        yaml: yaml
- function: get_yaml_location
  description: >
    Get the path to YAML file associated with a module
  tests:
  - description: YAML is defined
    arguments:
      module: module
      yaml: yaml
    assertions:
    - method: equals
      expected:
        yaml: yaml
  - description: Module and YAML exist
    arguments:
      module: ${ROOT_DIR}/main/shared/get_config/test_resources/app.py
      yaml: null
    assertions:
    - method: equals
      expected:
        yaml: ${ROOT_DIR}/main/shared/get_config/test_resources/app.yaml
  - description: Module doesn't exist
    arguments:
      module: module_location.py
      yaml: null
    assertions:
    - method: equals
      expected:
        yaml: ''
- function: set_locations
  description: >
    Sets the locations of YAML files for configurations
  tests:
  - description: YAML has no content
    arguments:
      yaml: ${ROOT_DIR}/main/shared/get_config/test_resources/blank.yml
    assertions:
    - method: equals
      expected:
        yaml: null
        config: ${ROOT_DIR}/main/shared/get_config/test_resources/blank.yml
        environment: ${ROOT_DIR}/main/shared/get_config/test_resources/blank.yml
        schema: ${ROOT_DIR}/main/shared/get_config/test_resources/blank.yml
        contents:
          '${ROOT_DIR}/main/shared/get_config/test_resources/blank.yml': {}
  - description: >
      YAML locations defined for config, environment,
      and schema
    arguments:
      yaml: yaml
      config: config
      environment: environment
      schema: schema
    assertions:
    - method: equals
      expected:
        config: config
        environment: environment
        schema: schema
        contents:
          config: {}
          environment: {}
          schema: {}
        yaml: null
  - description: Undefined arguments
    arguments:
      yaml: null
    assertions:
    - method: equals
      expected:
        yaml: null
        config: null
        environment: null
        schema: null
        contents:
          null: {}
- function: get_yaml_content
  description: Returns the content of a YAML file a location
  tests:
  - description: YAML location doesn't exist
    arguments:
      yaml: yaml
    assertions:
    - method: equals
      expected: {}
  - description: Return the contents of the YAML at the Location
    arguments:
      yaml: ${ROOT_DIR}/main/shared/get_config/test_resources/app.yaml
    assertions:
    - method: equals
      expected:
        config_a: config_a
        config_b: '00001'
        config_c:
        - config_c
        - config_c
        config_d:
          config_d: config_d
        config_f: config_f
        environment:
          A: A
          B: B
          C: C
          D: D
        schema:
        - &EXAMPLE
          cls_name: Example
          description: An example of the schema for a dataclass
          slots: true
          fields:
          - name: field_a
            type: dict
            description: an example of a dataclass field
            repr: false
            default: {}
          - name: field_b
            type: list
            description: an example of a dataclass field
            repr: false
            default: []
- function: get_contents
  description: >
    Get part or all of the content from YAML
    files for configs
  tests:
  - arguments:
      contents:
        null: {}
    assertions:
    - method: equals
      expected:
        config:
          environment: null
          schema: null
        environment: {}
        schema: {}
        contents: null
  - arguments:
      contents:
        location_a:
          environment: environment
          schema: schema
        location_b:
          environment: environment
          schema: schema
      config: location_a
      environment: location_a
      schema: location_b
    assertions:
    - method: equals
      expected:
        config:
          environment: null
        environment: {}
        schema: {}
        contents: null
- function: format_config
  description: Format config data
  tests:
  - arguments:
      config: {}
    cast_output:
    - caster: dc.asdict
      field: config
    assertions:
    - method: equals
      expected:
        config: {}
  - arguments:
      config:
        a: a
        b: b
    cast_output:
    - caster: __builtins__.str
      field: config
    assertions:
    - method: equals
      expected:
        config: Config(a='a', b='b')
- function: format_environment
  description: Format the environment field as dictionary
  tests:
  - description: >
      Environment is an empty dictionary
    arguments:
      config: {}
      environment: {}
    cast_output:
    - caster: __builtins__.str
    assertions:
    - method: equals
      expected: "{'environment': None, 'config': {'environment': Environment()}}"
  - description: >
      Environment is dictionary with defined key/value pairs
    arguments:
      config: {}
      environment:
        VAR_A: VALUE_A
        VAR_B: VALUE_B
    cast_output:
    - caster: __builtins__.str
    assertions:
    - method: equals
      expected: "{'environment': None, 'config': {'environment': Environment(VAR_A='VALUE_A', VAR_B='VALUE_B')}}"
  # - description: >
  #     Config has defined environment and schema attributes
  #   arguments:
  #     data:
  #       config: config
  #   assertions:
  #   - method: type
  #     field: config.environment
  #     expected: Environment
  #   - method: type
  #     field: config.schema
  #     expected: dict
- function: format_schema
  description: Formats a list of schemes as a dataclass
  tests:
  - description: No schema defined
    arguments:
      schema: []
      config: {}
    cast_output:
    - caster: __builtins__.str
    assertions:
    - method: equals
      expected: "{'schema': None, 'config': {'schema': Schema()}}"
  - description: Defined schema
    arguments:
      schema:
      - cls_name: Schema_A
        description: Scheme description
        fields:
        - default: {}
          description: Field description
          name: a
          repr: false
          type: dict
        - default: []
          description: Field description
          name: b
          repr: false
          type: list
        slots: true
      - cls_name: Schema_B
        description: Scheme description
        fields:
        - default: {}
          description: Field description
          name: a
          repr: false
          type: dict
        - default: []
          description: Field description
          name: b
          repr: false
          type: list
        slots: true
      config: {}
    cast_output:
    - caster: __builtins__.str
    assertions:
    - method: equals
      expected: "{'schema': None, 'config': {'schema': Schema(Schema_A=<class 'types.Schema_A'>, Schema_B=<class 'types.Schema_B'>)}}"
- function: convert_dict_to_dataclass
  description: Returns a dictionary as a dataclass
  tests:
  - description: Empty dictionary
    arguments:
      data: {}
      cls_name: Empty
    cast_output:
    - caster: __builtins__.str
    assertions:
    - method: equals
      expected: Empty()
  - description: Data_Class is an empty dictionary 2
    arguments:
      data:
        a: 0
        b: 0
      cls_name: Numbers
    cast_output:
    - caster: __builtins__.str
    assertions:
    - method: equals
      expected: Numbers(a=0, b=0)
  - description: Data_Class is a dictionary with defined key/value pairs
    arguments:
      data:
        key_a: value_a
        key_b: value_b
      cls_name: Dicts
    cast_output:
    - caster: __builtins__.dict
    assertions:
    - method: equals
      expected:
        key_a: value_a
        key_b: value_b
- function: get_function_parameters
  description: Returns a list of a functions paramters
  cast_arguments:
  - caster: test_resources.app.function_resource
    field: function
  arguments:
    function: function
  assertions:
  - method: equals
    expected:
    - parameter_1
    - parameter_2
- function: main
  description: Executes other functions to return the configs
  cast_output:
  - caster: __builtins__.str
  tests:
  - description: Empty configs
    arguments:
      yaml: ${ROOT_DIR}/main/shared/get_config/test_resources/blank.yml
    assertions:
    - method: equals
      expected: Config(schema=Schema(), environment=Environment())
  - description: YAML path provided and configs not empty
    arguments:
      yaml: ${ROOT_DIR}/main/shared/get_config/test_resources/app.yaml
    assertions:
    - method: equals
      expected: "Config(config_a='config_a', config_b='00001', config_c=['config_c', 'config_c'], config_d={'config_d': 'config_d'}, config_f='config_f', environment=Environment(A='A', B='B', C='C', D='D'), schema=Schema(Example=<class 'types.Example'>))"
  - description: Module path provided and configs not empty
    arguments:
      module: ${ROOT_DIR}/main/shared/get_config/test_resources/app.py
    assertions:
    - method: equals
      expected: "Config(config_a='config_a', config_b='00001', config_c=['config_c', 'config_c'], config_d={'config_d': 'config_d'}, config_f='config_f', environment=Environment(A='A', B='B', C='C', D='D'), schema=Schema(Example=<class 'types.Example'>))"
