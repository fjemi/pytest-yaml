globals:
  resources:
  - ${ROOT_DIR}/assertions/app.py


tests:
- function: pass_object_through
  description: >
    Return the object when the caster is null
  tests:
  - description: Undefined caster and defined object 0
    arguments:
      object: object_a
      caster: null
    assertions:
    - method: assertions.app.assert_equals
      expected: object_a
  - description: Undefined caster and defined object 1
    arguments:
      object: object_b
      caster: null
    assertions:
    - method: assertions.app.assert_equals
      expected: object_b
- function: pass_packed_object
  description: >
    Return result of passing an object to a contrustor
  cast_arguments:
  - caster: test_resources.app.get_resources
    field: caster
  tests:
  - description: >
      Object is an integer and caster is the sh`str` class
    arguments:
      object: 1111
      caster: str
    assertions:
    - method: assertions.app.assert_equals
      expected: '1111'
  - description: >
      Object is an string and caster is the sh`int` class
    arguments:
      object: '1111'
      caster: int
    assertions:
    - method: assertions.app.assert_equals
      expected: 1111
- function: do_nothing
  description: >
    Does nothing. Returns null.
  cast_arguments:
  - caster: test_resources.app.get_resources
    field: caster
  tests:
  - arguments:
      object: null
      caster: null
    assertions:
    - method: assertions.app.assert_equals
      expected: null
  - arguments: {}
    assertions:
    - method: assertions.app.assert_equals
      expected: null
- function: instatiate_caster
  description: Instatiates and returns the caster
  cast_arguments:
  - caster: test_resources.app.get_resources
    field: caster
  arguments:
    object: null
    caster: dataclass
  tests:
  - cast_output:
    - caster: dc.asdict
    assertions:
    - method: assertions.app.assert_equals
      expected:
        a: 0
        b: 0
  - assertions:
    - method: assertions.app.assert_type
      expected: Test_Data
- function: pass_dataclass
  descritpion: Pass a packed dictionary to a constructor
  cast_arguments:
  - caster: test_resources.app.get_resources
    field: caster
  - caster: test_resources.app.object_resources
    field: object
  tests:
  - description: Empty dict
    arguments:
      object: {}
      caster: str
    assertions:
    - method: assertions.app.assert_equals
      expected: '{}'
  - description: Dict with defined key/value pairs
    arguments:
      object:
        a: 1
        b: 1
      caster: str
    assertions:
    - method: assertions.app.assert_equals
      expected: "{'a': 1, 'b': 1}"
- function: pass_unpacked_dict
  description: Pass a dictionary unpacked to a caster
  cast_arguments:
  - caster: test_resources.app.get_resources
    field: caster
  cast_output:
  - caster: dc.asdict
  tests:
  - description: Empty dict
    arguments:
      object: {}
      caster: dataclass
    assertions:
    - method: assertions.app.assert_equals
      expected:
        a: 0
        b: 0
  - description: Dict with defined key/value pairs
    arguments:
      object:
        a: 1
        b: 1
      caster: dataclass
    assertions:
    - method: assertions.app.assert_equals
      expected:
        a: 1
        b: 1
- function: main
  description: Returns a constructor to use for casting
  tests:
  - description: Undefined caster
    arguments:
      handler: null
    assertions:
    - method: assertions.app.assert_equals
      expected: null
  - description: Defined caster
    arguments:
      handler: cast_any_packed_to_nonetype
    assertions:
    - method: assertions.app.assert_equals
      field: __name__
      expected: pass_object_through
    - method: assertions.app.assert_type
      expected: function
  - description: Defined caster
    arguments:
      handler: cast_nonetype_unpacked_to_function
    assertions:
    - method: assertions.app.assert_equals
      field: __name__
      expected: pass_packed_object
    - method: assertions.app.assert_type
      expected: function
