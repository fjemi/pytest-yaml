todo:
- import set_object from set_patches and use that to set dot-delimited field path


globals:
  resources:
  - ${ROOT_DIR}/assertions/app.py


tests:
- function: get_caster
  description: >
    Returns an object from a module to use as a caster
  cast_arguments:
  - field: module
    caster: test_resources.app.module_resource
  tests:
  - description: >
      Caster is not defined
    arguments:
      cast: {}
      module: module
    assertions:
    - method: equals
      expected:
        caster: null
  - description: >
      Return the str class from builtins
    arguments:
      cast:
        caster: __builtins__.str
      module: module
    assertions:
    - method: type
      expected: dict
    - method: equals
      field: caster.__name__
      expected: str
  - description: >
      Return the int class from builtins
    arguments:
      cast:
        caster: __builtins__.int
      module: module
    assertions:
    - method: type
      expected: dict
    - method: equals
      field: caster.__name__
      expected: int
  - description: >
      Return function sh`pass_through` from
      the module sh`resources.py` in the resources
      directory
    arguments:
      cast:
        caster: pass_through
      module: module
    assertions:
    - method: type
      expected: dict
    - method: equals
      field: caster.__name__
      expected: pass_through
- function: get_object_to_cast
  description: >
    Retrieves a field of an object
  tests:
  - description: >
      Retrieve the value associated with a dict key
    arguments:
      cast:
        field: key
      object:
        key: value
    assertions:
    - method: type
      expected: dict
    - method: equals
      expected:
        field:  key
        casted_object: value
  - description: >
      The cast argument's key sh`field` is null
    arguments:
      cast:
        field: null
      object:
        key: value
    assertions:
    - method: type
      expected: dict
    - method: equals
      expected:
        field:  null
        casted_object:
          key: value
  - description: >
      Object is not a dict
    cast_arguments:
    - field: object
      caster: test_resources.app.Test_Data
      unpack: true
    arguments:
      cast:
        field: b
      object:
        a: 1
        b: 2
    assertions:
    - method: type
      expected: dict
    - method: equals
      expected:
        field: b
        casted_object: 2
  - description: >
      Object and field are null
    arguments:
      cast:
        field: null
      object: null
    assertions:
    - method: type
      expected: dict
    - method: equals
      expected:
        field: null
        casted_object: null
- function: get_kinds
  description: >
    Returns the types of arguments passed
    into the function
  cast_output:
  - caster: dc.asdict
    field: kinds
  tests:
  - description: Arguments are of type any
    arguments:
      casted_object: casted_object
      object: 1
      caster: 1.1
    assertions:
    - method: equals
      expected:
        kinds:
          casted_object: any
          object: any
          caster: any
  - description: >
      Arguments are of type nonetype,
      function, and dataclass
    cast_arguments:
    - field: caster
      caster: test_resources.app.caster_resource
    - field: object
      caster: test_resources.app.object_resource
    arguments:
      casted_object: null
      object: dataclass
      caster: function
    assertions:
    - method: equals
      expected:
        kinds:
          casted_object: nonetype
          object: dataclass
          caster: function
  - description: >
      Arguments are a list, tuple, and the
      builtins class str
    cast_arguments:
    - field: caster
      caster: test_resources.app.caster_resource
    - field: object
      caster: test_resources.app.object_resource
    arguments:
      casted_object: []
      object: tuple
      caster: str
    assertions:
    - method: equals
      expected:
        kinds:
          casted_object: list
          object: list
          caster: type
- function: process_casts_for_arguments
  description: >
    Entrypoint into the module to facilitate casting arguments
  cast_arguments:
  - field: module
    caster: test_resources.app.module_resource
  tests:
  - description: Return arguments when there are no casts
    arguments:
      cast_arguments: []
      arguments: {}
      module: module
    assertions:
    - method: equals
      expected: {}
  - description: Returns the arguments cast as a string
    arguments:
      cast_arguments:
      - caster: __builtins__.str
      arguments:
        key: value
      module: module
    assertions:
    - method: equals
      expected:
        arguments: "{'key': 'value'}"
        cast_arguments: null
  - description: Returns the arguments cast as a string
    arguments:
      cast_arguments:
      - caster: __builtins__.int
        field: field
      arguments:
        field: '0000001'
      module: module
    assertions:
    - method: equals
      expected:
        arguments:
          field: 1
        cast_arguments: null
- function: process_casts_for_output
  description: >
    Entrypoint into the module to facilitate casting
    output from the function tested
  cast_arguments:
  - field: module
    caster: test_resources.app.module_resource
  tests: &PROCESS_CASTS_FOR_OUTPUT_TESTS
  - description: Return arguments when there are no casts
    arguments:
      cast_output: []
      output: {}
      module: module
    assertions:
    - method: equals
      expected: {}
  - description: Returns the arguments cast as a string
    arguments:
      cast_output:
      - caster: __builtins__.str
      output:
        key: value
      module: module
    assertions:
    - method: equals
      expected:
        output: "{'key': 'value'}"
        cast_output: null
  - description: Returns the arguments cast as a string
    arguments:
      cast_output:
      - caster: __builtins__.int
        field: field
      output:
        field: '0000001'
      module: module
    assertions:
    - method: equals
      expected:
        output:
          field: 1
        cast_output: null
- function: main
  description: >
    Returns the result of casting arguments, output,
    or an object
  cast_arguments:
  - caster: test_resources.app.module_resource
    field: module
  tests:
  - description: Return the object when casts is an empty list
    arguments:
      output: output
      object_key: output
      cast_output: []
      module: module
    assertions:
    - method: equals
      expected: {}
  - description: Return the result of casting an argument as a string
    arguments:
      arguments: '0123'
      object_key: arguments
      cast_arguments:
      - caster: __builtins__.int
        field: null
        unpack: false
      module: module
    assertions:
    - method: equals
      expected:
        arguments: 123
        cast_arguments: null
  - description: >
      Returning the result of casting an outputed dataclass
      as a dict
    arguments:
      output:
        a: 1
        b: 2
      object_key: output
      cast_output:
      - caster: dc.asdict
        unpack: false
      module: module
    assertions:
    - method: equals
      expected:
        cast_output: null
        output:
          a: 1
          b: 2
