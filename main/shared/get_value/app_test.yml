todo:
- Think about incorporating this functionality into `get_value`


globals:
  resources:
  - ${ROOT_DIR}/assertions/app.py


tests:
- function: get_value_from_dict
  description: >
    Retrieves the value for a key from
    a dictionary
  tests: &GET_VALUE_FROM_DICT_TESTS
  - description: Object is a dictionary
    arguments:
      object:
        key_a: value_a
        key_b: value_b
      field: key_a
    assertions:
    - method: assertions.app.assert_equals
      expected: value_a
  - description: >
      Object is a dictionary that doesn't contain the field.
      Default value is returned
    arguments:
      object:
        key_a: value_a
        key_b: value_b
      field: key_c
      default_value: default_value
    assertions:
    - method: assertions.app.assert_equals
      expected: default_value
- function: get_value_from_nonetype
  description: Returns null
  tests: &GET_VALUE_FROM_NONETYPE_TESTS
  - arguments:
      object: null
      field: field
    assertions:
    - method: assertions.app.assert_equals
      expected: null
  - arguments:
      object: null
      field: field
      default_value: default_value
    assertions:
    - method: assertions.app.assert_equals
      expected: default_value
- function: get_value_from_object
  description: Retrieve the value for a field of an object
  tests: &GET_VALUE_FROM_OBJECT_TESTS
  - description: Object is not a dictionary
    cast_arguments:
    - caster: test_resources.app.object_resource
      field: object
    tests:
    - description: Field exists in object
      arguments:
        object: object
        field: field
        default_value: default_value
      assertions:
      - method: assertions.app.assert_equals
        expected: value
    - description: Field does not exist in object
      arguments:
        object: object
        field: does_not_exist
        default_value: default_value
      assertions:
      - method: assertions.app.assert_equals
        expected: default_value
- function: main
  description: Retrieves a value from a dictionary or object
  tests:
  - << : *GET_VALUE_FROM_DICT_TESTS
  - << : *GET_VALUE_FROM_NONETYPE_TESTS
  - << : *GET_VALUE_FROM_OBJECT_TESTS
  